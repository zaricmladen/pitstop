version: '3'
services:

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    volumes:
      - rabbitmqdata:/var/lib/rabbitmq
      - "./rabbitmq:/etc/pitstop/"
    ports:
      - "15672:15672"
      - "5672:5672"
    environment:
      - RABBITMQ_CONFIG_FILE=/etc/pitstop/rabbitmq.conf

  sqlserver:
    image: mcr.microsoft.com/azure-sql-edge
    container_name: sqlserver
    volumes:
      - sqlserverdata:/var/opt/mssql
    ports:
      - "1434:1433"
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_PID=Developer
      - SA_PASSWORD=8jkGh47hnDw89Haq8LN2

  mailserver:
    image: maildev/maildev:1.1.0
    container_name: mailserver
    ports:
      - "25:25"
      - "4000:80"

  vehiclemanagementapi:
    image: pitstop/vehiclemanagementapi:1.0
    build: VehicleManagementAPI
    depends_on:
      - rabbitmq
      - sqlserver
    ports:
      - "5000"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - SERVICE_NAME=VehicleManagementAPI

  customermanagementapi:
    image: pitstop/customermanagementapi:1.0
    build: CustomerManagementAPI
    depends_on:
      - rabbitmq
      - sqlserver
    ports:
      - "5100"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - SERVICE_NAME=CustomerManagementAPI

  workshopmanagementapi:
    image: pitstop/workshopmanagementapi:1.0
    build: WorkshopManagementAPI
    depends_on:
      - rabbitmq
      - sqlserver
    ports:
      - "5200"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - SERVICE_NAME=WorkshopManagementAPI

  auditlogservice:
    image: pitstop/auditlogservice:1.0
    build: AuditlogService
    container_name: auditlogservice
    depends_on:
      - rabbitmq
    environment:
      - DOTNET_ENVIRONMENT=Production
      - SERVICE_NAME=AuditlogService

  invoiceservice:
    image: pitstop/invoiceservice:1.0
    build: InvoiceService
    container_name: invoiceservice
    depends_on:
      - rabbitmq
      - sqlserver
      - mailserver
    environment:
      - DOTNET_ENVIRONMENT=Production
      - SERVICE_NAME=InvoiceService

  notificationservice:
    image: pitstop/notificationservice:1.0
    build: NotificationService
    container_name: notificationservice
    depends_on:
      - rabbitmq
      - sqlserver
      - mailserver
    environment:
      - DOTNET_ENVIRONMENT=Production
      - SERVICE_NAME=NotificationService

  timeservice:
    image: pitstop/timeservice:1.0
    build: TimeService
    container_name: timeservice
    depends_on:
      - rabbitmq
    environment:
      - DOTNET_ENVIRONMENT=Production
      - SERVICE_NAME=TimeService

  workshopmanagementeventhandler:
    image: pitstop/workshopmanagementeventhandler:1.0
    build: WorkshopManagementEventHandler
    container_name: workshopmanagementeventhandler
    depends_on:
      - rabbitmq
      - sqlserver
    environment:
      - DOTNET_ENVIRONMENT=Production
      - SERVICE_NAME=WorkshopManagementEventHandler

  webapp:
    image: pitstop/webapp:1.0
    build: WebApp
    container_name: webapp
    depends_on:
      - customermanagementapi
      - vehiclemanagementapi
      - workshopmanagementapi
    ports:
      - "7005:7005"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - SERVICE_NAME=WebApp
    
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.0
    ports:
      - "127.0.0.1:9200:9200"
      - "127.0.0.1:9300:9300"
    restart: on-failure
    environment:
      - cluster.name=jaeger-cluster
      - discovery.type=single-node
      - http.host=0.0.0.0
      - transport.host=127.0.0.1
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - xpack.security.enabled=false
    volumes:
      - esdata:/usr/share/elasticsearch/data
  jaeger-collector:
    image: jaegertracing/jaeger-collector
    ports:
      - "14269:14269"
      - "14268:14268"
      - "14267:14267"
      - "9411:9411"
    restart: on-failure
    environment:
      - SPAN_STORAGE_TYPE=elasticsearch
    command: [
      "--es.server-urls=http://elasticsearch:9200",
      "--es.num-shards=1",
      "--es.num-replicas=0",
      "--log-level=error"
    ]
    depends_on:
      - elasticsearch

  jaeger-query:
    image: jaegertracing/jaeger-query
    environment:
      - SPAN_STORAGE_TYPE=elasticsearch
      - no_proxy=localhost
    ports:
      - "16686:16686"
      - "16687:16687"
    restart: on-failure
    command: [
      "--es.server-urls=http://elasticsearch:9200",
      "--span-storage.type=elasticsearch",
      "--log-level=debug"
    ]
    depends_on:
      - elasticsearch


volumes:
  sqlserverdata:
    external: true
  rabbitmqdata:
    external: true
  esdata:
    driver: local
